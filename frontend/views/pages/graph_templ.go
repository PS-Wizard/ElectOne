// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.850
package pages

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/PS-Wizard/VotingSystemUI/views/components"

func Graph() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"uk-container mt-40 gap-5\"><div class=\"uk-chart-container max-w-md\"><div class=\"p-4\"><div class=\"uk-card-title\">Area Chart - Smooth</div><div class=\"uk-text-sm mt-2\">January - June 2024</div></div><div class=\"px-4\"><uk-chart reactive><script type=\"application/json\" id=\"chartData\">\n        {\n          \"series\": [\n            {\n              \"name\": \"Desktops\",\n              \"data\": [186, 305, 237, 73, 209, 214]\n            }\n          ],\n          \"chart\": {\n            \"type\": \"area\",\n            \"zoom\": {\n              \"enabled\": false\n            },\n            \"toolbar\": {\n              \"show\": false\n            }\n          },\n          \"dataLabels\": {\n            \"enabled\": false\n          },\n          \"stroke\": {\n            \"curve\": \"smooth\",\n            \"width\": 2\n          },\n          \"colors\": [\"hsl(var(--chart-1))\"],\n          \"grid\": {\n            \"row\": {\n              \"colors\": []\n            },\n            \"borderColor\": \"hsl(var(--border))\"\n          },\n          \"xaxis\": {\n            \"categories\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n            \"tooltip\": {\n              \"enabled\": false\n            },\n            \"labels\": {\n              \"style\": {\n                \"colors\": \"hsl(var(--muted-foreground))\"\n              }\n            },\n            \"axisBorder\": {\n              \"show\": false\n            },\n            \"axisTicks\": {\n              \"show\": false\n            }\n          },\n          \"yaxis\": {\n            \"labels\": {\n              \"show\": false\n            }\n          },\n          \"tooltip\": {\n            \"title\": {\n              \"show\": false\n            }\n          }\n        }\n      </script></uk-chart></div><div class=\"p-4\"><div class=\"flex items-center gap-x-2 font-medium leading-none\">Trending up by 5.2% this month <uk-icon icon=\"trending-up\"></uk-icon></div><div class=\"text-muted-foreground mt-2 leading-none\">Showing total visitors for the last 6 months</div></div></div></div><script>\n\t\t\t// Function to generate random data\n\t\t\tfunction generateRandomData() {\n\t\t\t\treturn Array.from({ length: 6 }, () => Math.floor(Math.random() * 500)); // 6 random values between 0 and 500\n\t\t\t}\n\n\t\t\t// Function to update chart data with new random data\n\t\t\tfunction updateChartData() {\n\t\t\t\tconst newChartData = {\n\t\t\t\t\t\"series\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"Desktops\",\n\t\t\t\t\t\t\t\"data\": generateRandomData() // Get random data\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"chart\": {\n\t\t\t\t\t\t\"type\": \"area\",\n\t\t\t\t\t\t\"zoom\": {\n\t\t\t\t\t\t\t\"enabled\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"toolbar\": {\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"dataLabels\": {\n\t\t\t\t\t\t\"enabled\": false\n\t\t\t\t\t},\n\t\t\t\t\t\"stroke\": {\n\t\t\t\t\t\t\"curve\": \"smooth\",\n\t\t\t\t\t\t\"width\": 2\n\t\t\t\t\t},\n\t\t\t\t\t\"colors\": [\"hsl(var(--chart-1))\"],\n\t\t\t\t\t\"grid\": {\n\t\t\t\t\t\t\"row\": {\n\t\t\t\t\t\t\t\"colors\": []\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"borderColor\": \"hsl(var(--border))\"\n\t\t\t\t\t},\n\t\t\t\t\t\"xaxis\": {\n\t\t\t\t\t\t\"categories\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n\t\t\t\t\t\t\"tooltip\": {\n\t\t\t\t\t\t\t\"enabled\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"labels\": {\n\t\t\t\t\t\t\t\"style\": {\n\t\t\t\t\t\t\t\t\"colors\": \"hsl(var(--muted-foreground))\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"axisBorder\": {\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"axisTicks\": {\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"yaxis\": {\n\t\t\t\t\t\t\"labels\": {\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"tooltip\": {\n\t\t\t\t\t\t\"title\": {\n\t\t\t\t\t\t\t\"show\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Update the chart data in the <script> tag\n\t\t\t\tconst chartDataScript = document.getElementById('chartData');\n\t\t\t\tchartDataScript.textContent = JSON.stringify(newChartData);\n\t\t\t}\n\n\t\t\t// Poll every 3 seconds (3000 milliseconds)\n\t\t\tsetInterval(updateChartData, 3000);\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = components.Base("Graph").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
